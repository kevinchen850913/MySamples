// C++排序範例.cpp : 此檔案包含 'main' 函式。程式會於該處開始執行及結束執行。
//

#include <iostream>

//氣泡排序(Bubble sorting)
//資料結構中最簡單之排序法。所謂氣泡排序法就是相臨資料互相比較，若發現資料順序不對，就將資料互換。依次由上往下比，則結果將如氣泡般，依次由下往上浮起。
//
//【分析】
//1.比較之回合數 = 資料數(n) - 1。
//2.每一回合至少有一資料可以排列至正確之次序。
//3.時間複製度，最差與平均時間O(n2)
//4.需要一個額外(元素)空間。
//5.為一穩定排序。
//6.資料量小時，使用效果佳。
//
//【原理】
//1.每一回合逐一比較相臨資料，依排序之順序交換位置。
//2.每回合至少會有一次交換位置，至沒交換位置則停止。
// 
//【演算法】
//氣泡排序法之副程式
BubSort(int A[], int n)  
{
    int i, j, k, t = 1, Temp, sp;
    for (i = n - 1; i > 0; i--)
    {
        sp = 1;
        for (j = 0; j <= i; j++)
            if (A[j] > A[j + 1])
            {  //兩數交換位置
                Temp = A[j];
                A[j] = A[j + 1];
                A[j + 1] = Temp;
                sp = 0;
            }
        if (sp == 1) break;
    }
}

int main()
{
    
    std::cout << "Hello World!\n";
}

// 執行程式: Ctrl + F5 或 [偵錯] > [啟動但不偵錯] 功能表
// 偵錯程式: F5 或 [偵錯] > [啟動偵錯] 功能表

// 開始使用的提示: 
//   1. 使用 [方案總管] 視窗，新增/管理檔案
//   2. 使用 [Team Explorer] 視窗，連線到原始檔控制
//   3. 使用 [輸出] 視窗，參閱組建輸出與其他訊息
//   4. 使用 [錯誤清單] 視窗，檢視錯誤
//   5. 前往 [專案] > [新增項目]，建立新的程式碼檔案，或是前往 [專案] > [新增現有項目]，將現有程式碼檔案新增至專案
//   6. 之後要再次開啟此專案時，請前往 [檔案] > [開啟] > [專案]，然後選取 .sln 檔案
